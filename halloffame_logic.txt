Goal: Have the bot repost posts from an input channel to an output channel if enough unique users react to it - 
	it is essentially an automated hall of fame.

On bootup:
(1) Parse Output channel and create a Collection to store all of its posts
	(a) the Url of their embedded media serves as the key
	(b) the value is an object, which also contains three values:
		(i) a Flag to signify that it has been reposted to the Output channel, set to true
		(ii) a List of its unique reactors, set to NULL
		(iii) a Count of the total number of reactions
		
On reaction to a Post in the Input channel:
(1) Check if the reaction
	- occcured in the correct channel,
	- is on an image/video post (maybe allow text if it's in a quote?)

(2) Check Collection for the Post (via its Url)
	(a) if there is no entry, add one and set its Flag to false, its Count to 1, and create a List to record the reaction
	(b) else check if the Reactor appears in the List of unique reactors
		(i) Count++
		(ii) if Flag is false && Reactor is not in the List, add the Reactor to the List
			(1) if the length of the List >= the Threshold, Repost and set Flag to true
			(2) else if the length is less than the Threshold, return
		(iii) else if Flag is true, update the emoji reactions on the Output post

(3) Repost
	(a) Copy the Url and send a new message containing the Url in the Output channel
	(b) Tag the original poster and include the original message content in a quote
	(c) The Url is the identifier that allows the bot to
		(i) reconstruct the list of flagged posts even after a restart
		(ii) link the post in the input Channel with its counterpart in the output Channel
		Note: This means that if multiple posts have the same Url, the reactions and Lists will be fragmented, 
		and the original poster inaccurate - hence the following "On Post" section
	(d) React to the Repost with number emojis that spell out the Count

On Post to Input Channel:
(1) Check if its Url appears in the Collection
	(a) if true, delete Post and post the error message 
	"Sorry, this image/video has been posted already; your submission has been deleted"
	(b) else, return

Corner Cases/Issues:
(1) As previously mentioned, because the Post's embedded url is used as its key, 
	any duplicate urls within the Input channel will cause issues.
(2) Any reactions removed from a Post will not be included in the Count if the bot reboots - 
	the Count will be built only from the reactions on the Post at the bot's startup.
(3) The reaction listener needs to wait for the Collection to be constructed before executing
(4) What happens when a post is deleted from the Output channel? As of now this would prevent
	any future reactions on the Input post from having any effect.
(5) A db would be a better way to store the Collection and List contents; more performant and persistent
